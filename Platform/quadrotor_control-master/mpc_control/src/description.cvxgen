# Produced by CVXGEN, 2015-04-19 21:15:14 -0400.
# CVXGEN is Copyright (C) 2006-2012 Jacob Mattingley, jem@cvxgen.com.
# The code in this file is Copyright (C) 2006-2012 Jacob Mattingley.
# CVXGEN, or solvers produced by CVXGEN, cannot be used for commercial
# applications without prior written permission from Jacob Mattingley.

# Filename: description.cvxgen.
# Description: A description of the CVXGEN problem.

dimensions
  m = 3  # angles and thrust
  n = 6  # states.
  T = 10# horizon.
end

parameters
  A (n,n) {1,1 2,2 3,3 1,4 4,4 2,5 5,5 3,6 6,6}# dynamics matrix.
  B (n,m) {1,1 4,1 2,2 5,2 3,3 6,3} # controlled input matrix.
  Q (n,n) psd symmetric #psd  symmetric {1,1 2,2 3,3 4,4 5,5 6,6} # state cost.
  Q_final (n,n) psd symmetric #psd symmetric {1,1 2,2 3,3 4,4 5,5 6,6} # final state cost.
  R (m,m) psd symmetric #{1,1 2,2 3,3} # input cost.
  x[0] (n)  # initial state. var param
  u_limit (m) nonnegative  # amplitude limit
  x_limit (n) nonnegative #state limits
  x_ref (n)  #trajectory desired


end

variables
  x[t] (n), t=1..T+1  # state.
  u[t] (m), t=0..T  # input.

end

minimize
  sum[t=0..T](quad(x[t]-x_ref, Q) + quad(u[t], R)) + quad(x[T+1]-x_ref, Q_final)

subject to
  x[t+1] == A*x[t] + B*u[t] , t=0..T  # dynamics constraints.



  #set input limits on angles, vector constraint

  abs(u[t]) <= u_limit, t=0..T

  #set state limits

  abs(x[t][1]) <= x_limit[1], t=1..T
  abs(x[t][2]) <= x_limit[2], t=1..T
  abs(x[t][3]) <= x_limit[3], t=1..T
  abs(x[t][4]) <= x_limit[4], t=1..T
  abs(x[t][5]) <= x_limit[5], t=1..T
  abs(x[t][6]) <= x_limit[6], t=1..T


end
